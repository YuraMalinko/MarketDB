@*@page "/addProduct"
*@

@using OfferAggregator.Bll.Models;
@using OfferAggregator.Bll;
@using OfferAggregator.Dal.Models;
@using OfferAggregator.Dal.Repositories;
@using System.ComponentModel.DataAnnotations;

<h3>Добавить товар</h3>

<EditForm Model="@Product" OnValidSubmit="@AddProductToStock">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="edit-form-row">
        <div class="left-part">Название товара:</div>
        <InputText id="name" @bind-Value="Product.Name" />
    </div>

    <div class="edit-form-row">
        <div class="left-part">Номер группы товара:</div>

        <InputSelect TValue="int" @bind-Value="Product.GroupId">
            @foreach (var group in _groups)
            {
                if (group != null)
                {
                    <option value="@group.Id">@group.Name</option>
                }
            }
        </InputSelect>
    </div>

    @if (!string.IsNullOrEmpty(_errorMessage))
    {
        <div>@_errorMessage</div>
    }
    <button type="submit">Добавить новый товар на склад</button>
</EditForm>

@code {
    public ProductInputModel Product { get; set; }

    private ProductService _productService;

    private string _errorMessage;

    private List<GroupModel> _groups = new();

    protected override void OnInitialized()
    {
        Product = new ProductInputModel();
        _productService = new ProductService(
        new ProductsRepository(),
        new ProductsReviewsAndStocksRepository(),
        new TagsRepository(),
        new GroupRepository()
        );
        _groups = _productService.GetAllGroups();
    }

    private void AddProductToStock()
    {
        try
        {
            if (!string.IsNullOrEmpty(Product.Name) && Product.GroupId != null)
            {
                _productService.AddProduct(Product);
                Product = new ProductInputModel();
            }
            _errorMessage = string.Empty;
        }
        catch (ArgumentException ex)
        {
            _errorMessage = "Проверьте группу товара";
        }
        catch (Exception ex)
        {
            _errorMessage = "Произошла ошибка";
        }
    }
}