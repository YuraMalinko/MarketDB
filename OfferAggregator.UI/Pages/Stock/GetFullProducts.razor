@page "/getFullProducts"

<div style="width:1200px; display: flex; flex-direction:row">
    <div>
        <div class="get-full-products">
            <div class="header-pages-stock" style="padding-left:0px">
                Список товаров на складе
            </div>

            @if (_fullProducts.Count > 0)
            {
                <div class="table-get-full-products">
                    <table>
                        <thead>
                        <th style="width:70px">№ товара</th>
                        <th style="width:165px">Наименование товара</th>
                        <th style="width:130px">Наименование группы</th>
                        <th style="width:120px">Кол-во товара на складе</th>
                        <th style="width:120px">Наименование тега</th>
                        <th style="width:120px">Средняя оценка товара</th>
                        </thead>

                        <tbody>
                            @foreach (var fullProduct in _fullProducts.Where(FilterPredicat))
                            {
                                <tr>
                                    <td style="width:70px">@fullProduct.Id</td>
                                    <td style="width:165px">
                                        <a href="/product/@fullProduct.Id">
                                            @fullProduct.Name
                                        </a>
                                    </td>
                                    <td style="width:130px">@fullProduct.GroupName</td>
                                    <td style="width:120px; text-align:center">@fullProduct.Amount</td>
                                    <td style="width:120px">
                                        @foreach (var tag in fullProduct.Tags)
                                        {
                                    <tr class="nested-row">
                                        <td>@tag.Name</td>
                                    </tr>
                                        }
                                </td>
                                    @if (fullProduct.AverageScore != null)
                                    {
                                <td style="width:120px; text-align:center">@Math.Round((double)fullProduct.AverageScore,1)</td>
                                    }
                                    else
                                    {
                                <td>-</td>
                                    }
                            </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <h4>В настоящий момент товары на складе отсутствуют</h4>
            }
        </div>
    </div>

    <div class="filters">
        <EditForm Model="@_filter">
            <div class="filters-row">Фильтр по количеству товара на складе</div>
            <InputNumber id="countOver" placeholder="Количество От" @bind-Value="_filter.CountOverFilter" />
            <InputNumber id="countUnder" placeholder="Количество До" @bind-Value="_filter.CountUnderFilter" />

            <div class="filters-row">Фильтр по средней оценке товара</div>
            <InputNumber id="AverageScoreOver" placeholder="Оценка От" @bind-Value="_filter.AverageScoreOverFilter" />
            <InputNumber id="AverageScoreUnder" placeholder="Оценка До" @bind-Value="_filter.AverageScoreUnderFilter" />

            <div class="filters-row">Фильтр по группе товара</div>

            <InputSelect id="groupId" style="height: 30px; width: 200px; " @bind-Value="_filter.GroupFilter">
                <option></option>
                @foreach (var group in _groups.OrderBy(g => g.Name))
                {
                    if (group != null)
                    {
                        <option value="@group.Id">@group.Name</option>
                    }
                }
            </InputSelect>

            <div class="filters-row">Фильтр по тегу товара</div>
            <InputText id="Tag" placeholder="Название тега" @bind-Value="_filter.TagFilter" />

            <div class="filters-row">Фильтр по наименованию товара</div>
            <InputText id="ProductName" placeholder="Название товара" @bind-Value="_filter.ProductName" /><br />

            <button @onclick="NullAllFilters" class="button-submit">Сбросить все фильтры</button>
        </EditForm>
    </div>
</div>

@code {
    private ProductService _productService;

    private List<FullProductOutputModel> _fullProducts = new();

    private Filter _filter = new();

    private List<GroupOutputModel> _groups = new List<GroupOutputModel>();

    protected override void OnInitialized()
    {
        _productService = new ProductService(
        new ProductsRepository(),
        new ProductsReviewsAndStocksRepository(),
        new TagsRepository(),
        new GroupRepository(),
        new ClientRepository());

        _fullProducts = _productService.GetFullProducts();
        _groups = _productService.GetAllGroups();
    }

    private class Filter
    {
        public int? CountOverFilter { get; set; }

        public int? CountUnderFilter { get; set; }

        public float? AverageScoreOverFilter { get; set; }

        public float? AverageScoreUnderFilter { get; set; }

        public int? GroupFilter { get; set; }

        public string? TagFilter { get; set; }

        public string? ProductName { get; set; }
    }

    private bool FilterPredicat(FullProductOutputModel fullProduct)
    {
        return (_filter.CountOverFilter is null || fullProduct.Amount >= _filter.CountOverFilter)
        && (_filter.CountUnderFilter is null || fullProduct.Amount <= _filter.CountUnderFilter)
        && (_filter.AverageScoreOverFilter is null || fullProduct.AverageScore >= _filter.AverageScoreOverFilter)
        && (_filter.AverageScoreUnderFilter is null || fullProduct.AverageScore <= _filter.AverageScoreUnderFilter)
        && (_filter.GroupFilter is null || fullProduct.GroupId == _filter.GroupFilter)
        && (string.IsNullOrEmpty(_filter.TagFilter) || fullProduct.Tags.Any(t => t.Name.Contains(_filter.TagFilter, StringComparison.InvariantCultureIgnoreCase)))
        && (string.IsNullOrEmpty(_filter.ProductName)
            || fullProduct.Name.Contains(_filter.ProductName, StringComparison.InvariantCultureIgnoreCase));
    }

    private void NullAllFilters()
    {
        _filter = new Filter();
    }
}
