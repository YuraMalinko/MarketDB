@using OfferAggregator.Bll.Models;
@using OfferAggregator.Bll;
@using OfferAggregator.Dal.Models;
@using OfferAggregator.Dal.Repositories;
@using System.ComponentModel.DataAnnotations;

@page "/product/{Id:int}"

<div>
    <button @onclick="SetOrUnsetUpdateProductContent" class="btn">Изменить товар</button>
    <button @onclick="SetOrUnsetUpdateAmountContent" class="btn">Изменить количество</button>
    <button @onclick="SetOrUnsetAddScoreAndCommentContent" class="btn">Добавить оценку/комментарий</button>
</div>

<div style="width: 500px">
    @switch (_content)
    {
        case ProductPageContent.UpdateProduct:
            <UpdateProduct ProductId="Id" />
            break;

        case ProductPageContent.UpdateAmount:
            <UpdateAmount ProductId="Id" />
            break;

        case ProductPageContent.AddScoreAndComment:
            <AddScoreAndComment ProductId="Id" />
            break;
    }

</div>



@code {
    [Parameter]
    public int Id { get; set; }

    private ProductInputModel _product;

    private ProductService _productService;

    private string _errorMessage;

    protected override void OnInitialized()
    {
        _productService = new ProductService(
    new ProductsRepository(),
    new ProductsReviewsAndStocksRepository(),
    new TagsRepository(),
    new GroupRepository(),
    new ClientRepository());
    }

    private ProductPageContent _content;

    private void SetOrUnsetUpdateProductContent()
    {
        SetContenet(ProductPageContent.UpdateProduct);
    }

    private void SetOrUnsetUpdateAmountContent()
    {
        SetContenet(ProductPageContent.UpdateAmount);
    }

    private void SetOrUnsetAddScoreAndCommentContent()
    {
        SetContenet(ProductPageContent.AddScoreAndComment);
    }

    private void SetContenet(ProductPageContent productPageContent)
    {
        if (_content == productPageContent)
        {
            _content = ProductPageContent.None;
        }
        else
        {
            _content = productPageContent;
        }
    }

    private enum ProductPageContent
    {
        None = 0,
        UpdateProduct = 1,
        UpdateAmount = 2,
        AddScoreAndComment = 3
    }
}